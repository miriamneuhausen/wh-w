## check tiers, list number, path:

#get tier
phone_tier = 5
word_tier = 6

#list number in PRAAT
sound_number = 8
textgrid_number = 7

file_name$ = selected$("TextGrid")

#change path

####

writeInfoLine: "Measuring HH duration..."

#Extract the names of the Praat objects
thisSound$ = selected$("Sound")
thisTextGrid$ = selected$("TextGrid")

#Extract the number of intervals in the phoneme tier
# This is so that we know how many iterations to do in the for loop
select TextGrid 'thisTextGrid$'
numberOfPhonemes = Get number of intervals: phone_tier
numberOfWords = Get number of intervals: word_tier
appendInfoLine: "There are ", numberOfPhonemes, " phonemes and ", numberOfWords, " words."

#create output file
outputPath$ = "/Volumes/NO NAME/Documents/SocPhon/Praat/WH/"+ file_name$ +"_hh_duration.csv"
writeFileLine: "'outputPath$'", "file,time,word,phoneme,prec_sound,duration_HH"

#loop through each interval on the phoneme tier
for thisInterval from 1 to numberOfPhonemes

	#Get the label of the interval
	select TextGrid 'thisTextGrid$'
	thisPhoneme$= Get label of interval: phone_tier, thisInterval
	if thisPhoneme$ = "W"

		if thisInterval > 2 or thisInterval = 2
			soundiminusone$ = "0"
			soundiminusone$ = Get label of interval... phone_tier thisInterval-1
		endif

		if soundiminusone$ = "HH"

			#Find the midpoint
			thissoundiminusoneStartTime = Get start point: phone_tier, thisInterval-1
			thissoundiminusoneEndTime = Get end point: phone_tier, thisInterval-1
			duration = thissoundiminusoneEndTime - thissoundiminusoneStartTime
			midpoint = thissoundiminusoneStartTime + duration/2
		
			select TextGrid 'thisTextGrid$'
 			thisWordInterval = Get interval at time: word_tier, midpoint
    		thisWord$ = Get label of interval: word_tier, thisWordInterval
			thisSoundInterval = Get interval at time: phone_tier, midpoint
			numberOfIntervals = Get number of intervals... phone_tier

			appendFileLine: "'outputPath$'", 
		   		...file_name$, ",",
	    		...thissoundiminusoneStartTime, ",",
	    		...thisWord$, ",",
			   	...thisPhoneme$, ",",
				...soundiminusone$, ",",
		    	...duration, ","
		endif
	endif


endfor

appendInfoLine: newline$, newline$, "Whoo-hoo! It didn't crash!"
